#version 450
#extension GL_GOOGLE_include_directive : enable

#include "common.glsl"

layout (local_size_x = 256) in;

// the input buffer
layout(set = 0, binding = 0)  buffer InputDrawBuffer
	{   
	uint commandsCount;
	DrawCommand commands[];
	} inputDrawBuffer;

// the output buffer
layout(set = 0, binding = 1)  buffer OutputDrawBuffer
	{   
	uint commandsCount;
	DrawCommand commands[];
	} outputDrawBuffer;

//layout(set = 0, binding = 3) writeonly buffer DebugOut
//	{
//	DebugData data;
//	} debugOutput;

layout(push_constant) uniform block
	{
	uint commandsCount; 
	};

void main() 
	{		
	// get the index in the InputDrawBuffer
	uint commandIndex = gl_GlobalInvocationID.x;
	if( commandIndex == 0 )
		{
		outputDrawBuffer.commandsCount = 0;
		}
	if( commandIndex < commandsCount )
		{
		// check if the command has any items
		if( inputDrawBuffer.commands[commandIndex].instanceCount > 0 )
			{
			// not empty, add to commandsCount, which also allocates a command
			uint commandDestIndex = atomicAdd(outputDrawBuffer.commandsCount,1);
			
			// copy values
			outputDrawBuffer.commands[commandDestIndex] = inputDrawBuffer.commands[commandIndex];
			}
		}


	}
