#version 450
#extension GL_NV_mesh_shader : require
 
layout(local_size_x=3) in; 
 
layout(triangles, max_vertices=64, max_primitives=126) out;

layout(location=0) out vec4 color[];
layout(location=1) out vec4 pos[];

const vec3 vertices[3] = {vec3(-1,-1,0), vec3(0,1,0), vec3(1,-1,0)};
const vec3 colors[3] = {vec3(1.0,0.0,0.0), vec3(0.0,1.0,0.0), vec3(0.0,0.0,1.0)};
 
void main()
{
  uint thread_id = gl_LocalInvocationID.x;

  gl_MeshVerticesNV[thread_id].gl_Position = vec4(vertices[thread_id], 1.0);
  color[thread_id] = vec4(colors[thread_id], 1.0);
  pos[thread_id] = vec4(vertices[thread_id], 1.0);

  uint indices = 0x00020100;

  //gl_PrimitiveIndicesNV[thread_id] = thread_id;
  if( thread_id == 0)
	{
	writePackedPrimitiveIndices4x8NV( 0 , indices );
	}
  
  if( thread_id == 0)
	{
	gl_PrimitiveCountNV = 1;
	}
}